{
  "openapi": "3.1.0",
  "info": {
    "title": "v1 production",
    "version": "1"
  },
  "servers": [
    {
      "url": "https://production.hifibridge.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization",
        "x-default": "Bearer zpka_123456789"
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "summary": "Ping HIFI Servers",
        "description": "",
        "operationId": "get-ping",
        "tags": ["Connectivity"],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/create": {
      "post": {
        "summary": "Create User (Individual)",
        "description": "This endpoint handles user creation in an asynchronous manner. Polling the GET /user endpoint after creating the user is highly recommended. Note that adding \"#individual\" at the end of the url is optional.",
        "operationId": "create-user",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userType",
                  "legalFirstName",
                  "legalLastName",
                  "complianceEmail",
                  "compliancePhone",
                  "dateOfBirth",
                  "taxIdentificationNumber",
                  "addressLine1",
                  "city",
                  "stateProvinceRegion",
                  "postalCode",
                  "country",
                  "signedAgreementId",
                  "ipAddress",
                  "govIdFront",
                  "govIdCountry"
                ],
                "properties": {
                  "userType": {
                    "type": "string",
                    "enum": ["individual"]
                  },
                  "legalFirstName": {
                    "type": "string"
                  },
                  "legalLastName": {
                    "type": "string"
                  },
                  "complianceEmail": {
                    "type": "string",
                    "description": "Email address for compliance-related communications."
                  },
                  "compliancePhone": {
                    "type": "string",
                    "description": "Phone in format \"+12223334444\""
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "description": "Date of birth in format yyyy-mm-dd"
                  },
                  "taxIdentificationNumber": {
                    "type": "string",
                    "description": "For individual US customers, SSN should be used. For non-US individual customers, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative."
                  },
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateProvinceRegion": {
                    "type": "string",
                    "description": "ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions."
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Must be supplied for countries that use postal codes."
                  },
                  "country": {
                    "type": "string",
                    "description": "Three-letter alpha-3 country code as defined in the ISO 3166-1 spec."
                  },
                  "signedAgreementId": {
                    "type": "string",
                    "description": "ID of the signed agreement, fetched through the HIFI's Hosted Terms of Service Link POST /tos-link"
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP address of the user."
                  },
                  "govIdFront": {
                    "type": "string",
                    "description": "URL of  image of the front of the user's government issued ID  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                  },
                  "govIdBack": {
                    "type": "string",
                    "description": "Not required for passports. Required for all other ID types. URL of  image of the back of the user's government issued ID  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                  },
                  "govIdCountry": {
                    "type": "string",
                    "description": "Alpha-3 country code of the provided government id as defined in the ISO 3166-1 spec. Note that the government ID may be different from the \"country\" above."
                  },
                  "proofOfResidency": {
                    "type": "string",
                    "description": "URL of the file of the proof of residency (Required for users based in the EU or withdrawing into EU bank accounts) Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"wallet\": {\n        \"walletStatus\": \"ACTIVE\",\n        \"walletMessage\": \"\",\n        \"actionNeeded\": {\n            \"actions\": [],\n            \"fieldsToResubmit\": []\n        },\n        \"walletAddress\": {\n            \"POLYGON_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            },\n            \"ETHEREUM_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            },\n            \"OPTIMISM_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            }\n        }\n    },\n    \"user_kyc\": {\n        \"status\": \"PENDING\",\n        \"actionNeeded\": {\n            \"actions\": [],\n            \"fieldsToResubmit\": []\n        }\n    },\n    \"ramps\": {\n        \"usdAch\": {\n            \"onRamp\": {\n                \"status\": \"PENDING\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"\",\n                \"achPull\": {\n                    \"achPullStatus\": \"ACTIVE\",\n                    \"actionNeeded\": {\n                        \"actions\": [],\n                        \"fieldsToResubmit\": []\n                    }\n                }\n            },\n            \"offRamp\": {\n                \"status\": \"PENDING\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                }\n            }\n        },\n        \"euroSepa\": {\n            \"onRamp\": {\n                \"status\": \"INACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"SEPA onRamp will be available in near future\"\n            },\n            \"offRamp\": {\n                \"status\": \"ACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"\"\n            }\n        }\n    },\n    \"user\": {\n        \"id\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "wallet": {
                      "type": "object",
                      "properties": {
                        "walletStatus": {
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "walletMessage": {
                          "type": "string",
                          "example": ""
                        },
                        "actionNeeded": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array"
                            },
                            "fieldsToResubmit": {
                              "type": "array"
                            }
                          }
                        },
                        "walletAddress": {
                          "type": "object",
                          "properties": {
                            "POLYGON_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            },
                            "ETHEREUM_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            },
                            "OPTIMISM_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "user_kyc": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "PENDING"
                        },
                        "actionNeeded": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array"
                            },
                            "fieldsToResubmit": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "ramps": {
                      "type": "object",
                      "properties": {
                        "usdAch": {
                          "type": "object",
                          "properties": {
                            "onRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "PENDING"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": ""
                                },
                                "achPull": {
                                  "type": "object",
                                  "properties": {
                                    "achPullStatus": {
                                      "type": "string",
                                      "example": "ACTIVE"
                                    },
                                    "actionNeeded": {
                                      "type": "object",
                                      "properties": {
                                        "actions": {
                                          "type": "array"
                                        },
                                        "fieldsToResubmit": {
                                          "type": "array"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "offRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "PENDING"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "euroSepa": {
                          "type": "object",
                          "properties": {
                            "onRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "INACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": "SEPA onRamp will be available in near future"
                                }
                              }
                            },
                            "offRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "ACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": ""
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"fields provided are either missing or invalid\", \"missing_fields\": [], \"invalid_fields\": [] }"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "Unsupported area (ipAddress)"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "fields provided are either missing or invalid"
                        },
                        "missing_fields": {
                          "type": "array"
                        },
                        "invalid_fields": {
                          "type": "array"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"Unexpected error happened, please contact HIFI for more information\" }"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened, please contact HIFI for more information"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/user": {
      "get": {
        "summary": "Get User",
        "description": "",
        "operationId": "get-user",
        "tags": ["User"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"wallet\": {\n        \"walletStatus\": \"ACTIVE\",\n        \"walletMessage\": \"\",\n        \"actionNeeded\": {\n            \"actions\": [],\n            \"fieldsToResubmit\": []\n        },\n        \"walletAddress\": {\n            \"POLYGON_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            },\n            \"ETHEREUM_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            },\n            \"OPTIMISM_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            }\n        }\n    },\n    \"user_kyc\": {\n        \"status\": \"ACTIVE\",\n        \"actionNeeded\": {\n            \"actions\": [],\n            \"fieldsToResubmit\": []\n        }\n    },\n    \"ramps\": {\n        \"usdAch\": {\n            \"onRamp\": {\n                \"status\": \"ACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"\",\n                \"achPull\": {\n                    \"achPullStatus\": \"ACTIVE\",\n                    \"actionNeeded\": {\n                        \"actions\": [],\n                        \"fieldsToResubmit\": []\n                    }\n                }\n            },\n            \"offRamp\": {\n                \"status\": \"ACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                }\n            }\n        },\n        \"euroSepa\": {\n            \"onRamp\": {\n                \"status\": \"INACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"SEPA onRamp will be available in near future\"\n            },\n            \"offRamp\": {\n                \"status\": \"ACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"\"\n            }\n        }\n    },\n    \"user\": {\n        \"id\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "wallet": {
                      "type": "object",
                      "properties": {
                        "walletStatus": {
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "walletMessage": {
                          "type": "string",
                          "example": ""
                        },
                        "actionNeeded": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array"
                            },
                            "fieldsToResubmit": {
                              "type": "array"
                            }
                          }
                        },
                        "walletAddress": {
                          "type": "object",
                          "properties": {
                            "POLYGON_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            },
                            "ETHEREUM_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            },
                            "OPTIMISM_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "user_kyc": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "actionNeeded": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array"
                            },
                            "fieldsToResubmit": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "ramps": {
                      "type": "object",
                      "properties": {
                        "usdAch": {
                          "type": "object",
                          "properties": {
                            "onRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "ACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": ""
                                },
                                "achPull": {
                                  "type": "object",
                                  "properties": {
                                    "achPullStatus": {
                                      "type": "string",
                                      "example": "ACTIVE"
                                    },
                                    "actionNeeded": {
                                      "type": "object",
                                      "properties": {
                                        "actions": {
                                          "type": "array"
                                        },
                                        "fieldsToResubmit": {
                                          "type": "array"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "offRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "ACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "euroSepa": {
                          "type": "object",
                          "properties": {
                            "onRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "INACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": "SEPA onRamp will be available in near future"
                                }
                              }
                            },
                            "offRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "ACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": ""
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"User not found for provided userId\" }"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found for provided userId"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error happened, please contact HIFI for more information\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened, please contact HIFI for more information"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Update User",
        "description": "Use this endpoint to update a User. Submit only the properties you wish to update. For example, if the actions array from the Create User response indicates the ID was blurry, you could use this endpoint to submit a new govIdFront. Available only for individuals at this time.",
        "operationId": "create-user-copy",
        "tags": ["User"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "legalFirstName": {
                    "type": "string"
                  },
                  "legalLastName": {
                    "type": "string"
                  },
                  "complianceEmail": {
                    "type": "string",
                    "description": "Email address for compliance-related communications."
                  },
                  "compliancePhone": {
                    "type": "string",
                    "description": "Phone in format \"+12223334444\""
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "description": "Date of birth in format yyyy-mm-dd"
                  },
                  "taxIdentificationNumber": {
                    "type": "string",
                    "description": "For individual US customers, SSN should be used. For non-US individual customers, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative."
                  },
                  "govIdCountry": {
                    "type": "string",
                    "description": "Three-letter alpha-3 country code of the provided government id as defined in the ISO 3166-1 spec."
                  },
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateProvinceRegion": {
                    "type": "string",
                    "description": "ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions."
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Must be supplied for countries that use postal codes."
                  },
                  "country": {
                    "type": "string",
                    "description": "Three-letter alpha-3 country code as defined in the ISO 3166-1 spec."
                  },
                  "signedAgreementId": {
                    "type": "string",
                    "description": "ID of the signed agreement, fetched through the HIFI's Hosted Terms of Service Link"
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP address of the user."
                  },
                  "govIdFront": {
                    "type": "string",
                    "description": "Signed URL of  image of the front of the user's government issued ID  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                  },
                  "govIdBack": {
                    "type": "string",
                    "description": "Signed URL of  image of the back of the user's government issued ID  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                  },
                  "proofOfResidency": {
                    "type": "string",
                    "description": "URL of the file of the proof of residency (Only required for European user or withdrawing into European bank account) Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"wallet\": {\n        \"walletStatus\": \"ACTIVE\",\n        \"walletMessage\": \"\",\n        \"actionNeeded\": {\n            \"actions\": [],\n            \"fieldsToResubmit\": []\n        },\n        \"walletAddress\": {\n            \"POLYGON_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            },\n            \"ETHEREUM_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            },\n            \"OPTIMISM_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            }\n        }\n    },\n    \"user_kyc\": {\n        \"status\": \"PENDING\",\n        \"actionNeeded\": {\n            \"actions\": [],\n            \"fieldsToResubmit\": []\n        }\n    },\n    \"ramps\": {\n        \"usdAch\": {\n            \"onRamp\": {\n                \"status\": \"PENDING\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"\",\n                \"achPull\": {\n                    \"achPullStatus\": \"ACTIVE\",\n                    \"actionNeeded\": {\n                        \"actions\": [],\n                        \"fieldsToResubmit\": []\n                    }\n                }\n            },\n            \"offRamp\": {\n                \"status\": \"PENDING\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                }\n            }\n        },\n        \"euroSepa\": {\n            \"onRamp\": {\n                \"status\": \"INACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"SEPA onRamp will be available in near future\"\n            },\n            \"offRamp\": {\n                \"status\": \"ACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"\"\n            }\n        }\n    },\n    \"user\": {\n        \"id\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "wallet": {
                      "type": "object",
                      "properties": {
                        "walletStatus": {
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "walletMessage": {
                          "type": "string",
                          "example": ""
                        },
                        "actionNeeded": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array"
                            },
                            "fieldsToResubmit": {
                              "type": "array"
                            }
                          }
                        },
                        "walletAddress": {
                          "type": "object",
                          "properties": {
                            "POLYGON_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            },
                            "ETHEREUM_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            },
                            "OPTIMISM_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "user_kyc": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "PENDING"
                        },
                        "actionNeeded": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array"
                            },
                            "fieldsToResubmit": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "ramps": {
                      "type": "object",
                      "properties": {
                        "usdAch": {
                          "type": "object",
                          "properties": {
                            "onRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "PENDING"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": ""
                                },
                                "achPull": {
                                  "type": "object",
                                  "properties": {
                                    "achPullStatus": {
                                      "type": "string",
                                      "example": "ACTIVE"
                                    },
                                    "actionNeeded": {
                                      "type": "object",
                                      "properties": {
                                        "actions": {
                                          "type": "array"
                                        },
                                        "fieldsToResubmit": {
                                          "type": "array"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "offRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "PENDING"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "euroSepa": {
                          "type": "object",
                          "properties": {
                            "onRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "INACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": "SEPA onRamp will be available in near future"
                                }
                              }
                            },
                            "offRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "ACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": ""
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"User not found for provided userId\" }"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found for provided userId"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error happened, please contact HIFI for more information\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened, please contact HIFI for more information"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/usd/onramp/plaid": {
      "post": {
        "summary": "Add a Bank Account for USD Onramp (Plaid)",
        "description": "HIFI and Plaid have partnered to enable you to use your existing Plaid integration to connect bank accounts and leverage HIFI's transfer automation capabilities.  To get started, follow the below guide from Plaid's API docs. Completing the process will result in the creation of a processor_token.  Sending the processor_token to this endpoint will create an Account for a User within the HIFI platform. You can then easily use the resulting account id as the source of a onramp transaction. https://plaid.com/docs/api/processors/",
        "operationId": "add-a-bank-account-for-usd-onramp-via-plaid-processor-token",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["plaidProcessorToken", "accountType", "bankName"],
                "properties": {
                  "plaidProcessorToken": {
                    "type": "string",
                    "description": "See https://plaid.com/docs/api/processors/"
                  },
                  "accountType": {
                    "type": "string",
                    "enum": ["CHECKING", "SAVING", "BUSINESS"]
                  },
                  "bankName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"status\": \"ACTIVE\",\n    \"invalidFields\": [],\n    \"message\": \"Bank account added successfully\",\n    \"id\": \"8caf905c-282b-4b0d-ba15-beac9c2aee92\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "invalidFields": {
                      "type": "array"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bank account added successfully"
                    },
                    "id": {
                      "type": "string",
                      "example": "8caf905c-282b-4b0d-ba15-beac9c2aee92"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\t\t\t\"status: 400,\n\t\t\t\t\"invalidFields\": [\"processor_token\"],\n\t\t\t\t\"message\": \"\"\n\t\t\t}"
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\t\t\t\"status: 400,\n\t\t\t\t\"invalidFields\": [],\n\t\t\t\t\"message\": \"No user record found for ach pull. Please create a user first.\"\n\t\t\t}"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\t\t\t\"status: 400,\n\t\t\t\t\"invalidFields\": [],\n\t\t\t\t\"message\": \"Unknown error, please send a screenshot of this request to developers@hifibridge.com\"\n\t\t\t}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/usd/offramp": {
      "post": {
        "summary": "Add a ACH destination bank account for stablecoin liquidations",
        "description": "",
        "operationId": "add-a-bank-account-for-usd-onramp-copy",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currency",
                  "bankName",
                  "accountOwnerName",
                  "accountNumber",
                  "routingNumber",
                  "streetLine1",
                  "city",
                  "state",
                  "postalCode",
                  "country",
                  "accountOwnerType"
                ],
                "properties": {
                  "currency": {
                    "type": "string",
                    "default": "usd",
                    "enum": ["usd"]
                  },
                  "bankName": {
                    "type": "string",
                    "description": "e.g. Chase"
                  },
                  "accountOwnerName": {
                    "type": "string"
                  },
                  "accountNumber": {
                    "type": "string"
                  },
                  "routingNumber": {
                    "type": "string"
                  },
                  "streetLine1": {
                    "type": "string"
                  },
                  "streetLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "description": "ISO 3166-2 subdivision code."
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "description": "Three-letter alpha-3 country code as defined in the ISO 3166-1 spec. Currently must be passed as \"USA\"."
                  },
                  "accountOwnerType": {
                    "type": "string",
                    "enum": ["individual", "business"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"status\": \"ACTIVE\",\n    \"invalidFields\": [],\n    \"message\": \"Account created successfully\",\n    \"id\": \"daa6ad75-a4c2-486f-a937-1bbf4d19553a\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "invalidFields": {
                      "type": "array"
                    },
                    "message": {
                      "type": "string",
                      "example": "Account created successfully"
                    },
                    "id": {
                      "type": "string",
                      "example": "daa6ad75-a4c2-486f-a937-1bbf4d19553a"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": 'Missing required fields', \"missingFields\": []}"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"Internal Server Error}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/euro/offramp": {
      "post": {
        "summary": "Add a SEPA destination bank account for stablecoin liquidations",
        "description": "",
        "operationId": "add-a-bank-account-for-usd-offramp-copy",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currency",
                  "bankName",
                  "accountOwnerName",
                  "accountOwnerType",
                  "ibanAccountNumber",
                  "ibanCountryCode",
                  "businessIdentifierCode"
                ],
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "See https://plaid.com/docs/api/processors/"
                  },
                  "bankName": {
                    "type": "string",
                    "description": "e.g. Chase"
                  },
                  "accountOwnerName": {
                    "type": "string"
                  },
                  "accountOwnerType": {
                    "type": "string",
                    "enum": ["individual", "business"]
                  },
                  "ibanAccountNumber": {
                    "type": "string",
                    "description": "The International Bank Account Number (IBAN) that will be used to send the funds"
                  },
                  "ibanCountryCode": {
                    "type": "string",
                    "description": "Country in which the bank account is located. It's a three-letter alpha-3 country code as defined in the ISO 3166-1 spec."
                  },
                  "businessIdentifierCode": {
                    "type": "string",
                    "description": "The Business Identifier Code (BIC) that will be used to send the funds"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "Required when accountOwnerType == \"individual\""
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Required when accountOwnerType == \"individual\""
                  },
                  "businessName": {
                    "type": "string",
                    "description": "Required when accountOwnerType == \"business\""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"status\": \"ACTIVE\",\n    \"invalidFields\": [],\n    \"message\": \"Account created successfully\",\n    \"id\": \"daa6ad75-a4c2-486f-a937-1bbf4d19553a\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "invalidFields": {
                      "type": "array"
                    },
                    "message": {
                      "type": "string",
                      "example": "Account created successfully"
                    },
                    "id": {
                      "type": "string",
                      "example": "daa6ad75-a4c2-486f-a937-1bbf4d19553a"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": 'Missing required fields', \"missingFields\": []}"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"Internal Server Error}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account": {
      "get": {
        "summary": "Get Account",
        "description": "Returns a bank account that was added with HIFI's /account endpoints",
        "operationId": "get-account",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "railType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["usOnRamp", "usOffRamp", "euOffRamp", "usOffRamp-wire"]
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"accountId\": \"7cd049ad-63fa-4c27-876b-c7bb6bf25f40\",\n    \"userId\": \"c0456689-d56d-4291-8018-14bccb71202f\",\n    \"accountType\": \"CHECKING\",\n    \"accountNumber\": \"5206\",\n    \"routingNumber\": \"028000131\",\n    \"bankName\": \"Chase\",\n    \"railType\": \"usOnRamp\"\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "1fe4d9fa-2343-4175-8af3-2e068fb19094"
                        },
                        "userId": {
                          "type": "string",
                          "example": "c0456689-d56d-4291-8018-14bccb71202f"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-06-27T15:42:48.518052+00:00"
                        },
                        "currency": {
                          "type": "string",
                          "example": "usd"
                        },
                        "bankName": {
                          "type": "string",
                          "example": "Bank of Aerica"
                        },
                        "accountOwnerName": {
                          "type": "string",
                          "example": "Wei Yu, Yang"
                        },
                        "accountOwnerType": {
                          "type": "string",
                          "example": "individual"
                        },
                        "accountType": {
                          "type": "string",
                          "example": "us"
                        },
                        "beneficiaryStreetLine1": {
                          "type": "string",
                          "example": "1 East Loop Rd."
                        },
                        "beneficiaryStreetLine2": {},
                        "beneficiaryCity": {
                          "type": "string",
                          "example": "New York"
                        },
                        "beneficiaryState": {
                          "type": "string",
                          "example": "NY"
                        },
                        "beneficiaryPostalCode": {
                          "type": "string",
                          "example": "10044"
                        },
                        "beneficiaryCountry": {
                          "type": "string",
                          "example": "USA"
                        },
                        "iban": {},
                        "businessIdentifierCode": {},
                        "bankCountry": {},
                        "accountNumber": {
                          "type": "string",
                          "example": "483101817874"
                        },
                        "routingNumber": {
                          "type": "string",
                          "example": "021000322"
                        },
                        "railType": {
                          "type": "string",
                          "example": "usOffRamp"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "example": "7cd049ad-63fa-4c27-876b-c7bb6bf25f40"
                        },
                        "userId": {
                          "type": "string",
                          "example": "c0456689-d56d-4291-8018-14bccb71202f"
                        },
                        "accountType": {
                          "type": "string",
                          "example": "CHECKING"
                        },
                        "accountNumber": {
                          "type": "string",
                          "example": "5206"
                        },
                        "routingNumber": {
                          "type": "string",
                          "example": "028000131"
                        },
                        "bankName": {
                          "type": "string",
                          "example": "Chase"
                        },
                        "railType": {
                          "type": "string",
                          "example": "usOnRamp"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": 'Invalid railType' }"
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"No account found\" }"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No account found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transfer/crypto-to-crypto": {
      "get": {
        "summary": "Get a wallet-to-wallet transfer record",
        "description": "Get the transfer history of a specific crypto to crypto transfer",
        "operationId": "transfer-usdc",
        "tags": ["Transfer"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id of the transfer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"transferType\": \"CRYPTO_TO_CRYPTO\",\n    \"transferDetails\": {\n        \"id\": \"e0f38c95-10bc-4af4-86b2-301e394d40a8\",\n        \"requestId\": \"b15be598-f61b-42f5-9589-1e8183076f77\",\n        \"senderUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"recipientUserId\": \"0c91a2a3-b0da-4779-bd15-2b29b8854de4\",\n        \"recipientAddress\": \"0x89dfD8792c7E7041c24F01223929F1d8Dd642F0c\",\n        \"chain\": \"POLYGON_MAINNET\",\n        \"currency\": \"usdc\",\n        \"transactionHash\": \"0xd2f14a064ae8c7509a14597c374a63172f682cfa5fd37b6bf32edd334d52064e\",\n        \"createdAt\": \"2024-07-10T16:20:33.435706+00:00\",\n        \"updatedAt\": \"2024-07-10T16:21:01.027+00:00\",\n        \"status\": \"CONFIRMED\",\n        \"contractAddress\": \"0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359\",\n        \"sender\": {\n            \"business_name\": null,\n            \"legal_last_name\": \"YANG\",\n            \"compliance_email\": \"william@hifibridge.com\",\n            \"legal_first_name\": \"William\"\n        },\n        \"recipient\": {\n            \"business_name\": null,\n            \"legal_last_name\": \"Gutix\",\n            \"compliance_email\": \"max@gmail.com\",\n            \"legal_first_name\": \"Max\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "transferType": {
                      "type": "string",
                      "example": "CRYPTO_TO_CRYPTO"
                    },
                    "transferDetails": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "e0f38c95-10bc-4af4-86b2-301e394d40a8"
                        },
                        "requestId": {
                          "type": "string",
                          "example": "b15be598-f61b-42f5-9589-1e8183076f77"
                        },
                        "senderUserId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "recipientUserId": {
                          "type": "string",
                          "example": "0c91a2a3-b0da-4779-bd15-2b29b8854de4"
                        },
                        "recipientAddress": {
                          "type": "string",
                          "example": "0x89dfD8792c7E7041c24F01223929F1d8Dd642F0c"
                        },
                        "chain": {
                          "type": "string",
                          "example": "POLYGON_MAINNET"
                        },
                        "currency": {
                          "type": "string",
                          "example": "usdc"
                        },
                        "transactionHash": {
                          "type": "string",
                          "example": "0xd2f14a064ae8c7509a14597c374a63172f682cfa5fd37b6bf32edd334d52064e"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-07-10T16:20:33.435706+00:00"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2024-07-10T16:21:01.027+00:00"
                        },
                        "status": {
                          "type": "string",
                          "example": "CONFIRMED"
                        },
                        "contractAddress": {
                          "type": "string",
                          "example": "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359"
                        },
                        "sender": {
                          "type": "object",
                          "properties": {
                            "business_name": {},
                            "legal_last_name": {
                              "type": "string",
                              "example": "YANG"
                            },
                            "compliance_email": {
                              "type": "string",
                              "example": "william@hifibridge.com"
                            },
                            "legal_first_name": {
                              "type": "string",
                              "example": "William"
                            }
                          }
                        },
                        "recipient": {
                          "type": "object",
                          "properties": {
                            "business_name": {},
                            "legal_last_name": {
                              "type": "string",
                              "example": "Gutix"
                            },
                            "compliance_email": {
                              "type": "string",
                              "example": "max@gmail.com"
                            },
                            "legal_first_name": {
                              "type": "string",
                              "example": "Max"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"id is required\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "id is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"No transaction found for id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No transaction found for id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error ahppened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error ahppened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Transfer stablecoins",
        "description": "Transfer stablecoins between users or wallet addresses",
        "operationId": "add-a-bank-account-for-usd-offramp-copy-1",
        "tags": ["Transfer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "requestId",
                  "senderUserId",
                  "amount",
                  "chain",
                  "currency"
                ],
                "properties": {
                  "requestId": {
                    "type": "string",
                    "description": "Unique identifier for the transfer request (recommend using uuid v4)"
                  },
                  "senderUserId": {
                    "type": "string",
                    "description": "User Id of the sender"
                  },
                  "recipientUserId": {
                    "type": "string",
                    "description": "User Id of the recipient  (should either provide recipientUserId or recipientAddress)"
                  },
                  "recipientAddress": {
                    "type": "string",
                    "description": "wallet address of the recipient (should either provide recipientUserId or recipientAddress)"
                  },
                  "amount": {
                    "type": "number",
                    "format": "float"
                  },
                  "chain": {
                    "type": "string",
                    "enum": ["POLYGON_MAINNET"]
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["usdc"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"transferType\": \"CRYPTO_TO_CRYPTO\",\n    \"transferDetails\": {\n        \"id\": \"0b9a8c80-3ce3-4aee-9d94-8a8ac43a2543\",\n        \"requestId\": \"5d0a55aa-9a2a-486a-a57e-d5d9e576cf6d\",\n        \"senderUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"recipientUserId\": \"0c91a2a3-b0da-4779-bd15-2b29b8854de4\",\n        \"recipientAddress\": \"0x89dfD8792c7E7041c24F01223929F1d8Dd642F0c\",\n        \"chain\": \"POLYGON_MAINNET\",\n        \"currency\": \"usdc\",\n        \"amount\": 0.01,\n        \"transactionHash\": \"0x23188ac9f798d97d481f86fe1904a74cd885ed8bcff9d52d8bb7c3a2f54a3a59\",\n        \"createdAt\": \"2024-06-25T20:41:57.671322+00:00\",\n        \"status\": \"SUBMITTED\",\n        \"contractAddress\": \"0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359\",\n      \"failedReason\": \"\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "transferType": {
                      "type": "string",
                      "example": "CRYPTO_TO_CRYPTO"
                    },
                    "transferDetails": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "0b9a8c80-3ce3-4aee-9d94-8a8ac43a2543"
                        },
                        "requestId": {
                          "type": "string",
                          "example": "5d0a55aa-9a2a-486a-a57e-d5d9e576cf6d"
                        },
                        "senderUserId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "recipientUserId": {
                          "type": "string",
                          "example": "0c91a2a3-b0da-4779-bd15-2b29b8854de4"
                        },
                        "recipientAddress": {
                          "type": "string",
                          "example": "0x89dfD8792c7E7041c24F01223929F1d8Dd642F0c"
                        },
                        "chain": {
                          "type": "string",
                          "example": "POLYGON_MAINNET"
                        },
                        "currency": {
                          "type": "string",
                          "example": "usdc"
                        },
                        "amount": {
                          "type": "number",
                          "example": 0.01,
                          "default": 0
                        },
                        "transactionHash": {
                          "type": "string",
                          "example": "0x23188ac9f798d97d481f86fe1904a74cd885ed8bcff9d52d8bb7c3a2f54a3a59"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-06-25T20:41:57.671322+00:00"
                        },
                        "status": {
                          "type": "string",
                          "example": "SUBMITTED"
                        },
                        "contractAddress": {
                          "type": "string",
                          "example": "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359"
                        },
                        "failedReason": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"transfer amount exceeds balance\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "transfer amount exceeds balance"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Request for requestId is already exist, please use get transaction endpoint with id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Request for requestId is already exist, please use get transaction endpoint with id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/tos-link": {
      "post": {
        "summary": "Generate Terms of Service Link",
        "description": "The Terms of Service page must be displayed to the end user. This page can be whitelabeled upon request.",
        "operationId": "get-user-copy",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["idempotencyKey"],
                "properties": {
                  "idempotencyKey": {
                    "type": "string",
                    "description": "Unique identifier for the resource"
                  },
                  "templateId": {
                    "type": "string",
                    "description": "Id of the custom terms of service template generated in the HIFI developer dashboard. If not passed, the page will use HIFI's default template."
                  },
                  "redirectUrl": {
                    "type": "string",
                    "description": "Url to redirect after accepting the terms of service link. The signedAgreementId is the same as the passed idempotencyKey, you may attempt to call the POST /user/create endpoint, but if the user did not accept the TOS, the user creation will return an error."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"url\": \"https://dashboard.hifibridge.com/accept-terms-of-service?sessionToken=e12d9c3f-75a8-4bd1-aa3d-97a2cfaf2c40&redirectUrl=undefined&templateId=2fb2da24-472a-4e5b-b160-038d9dc82a40\",\n    \"sessionToken\": \"e12d9c3f-75a8-4bd1-aa3d-97a2cfaf2c40\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "https://dashboard.hifibridge.com/accept-terms-of-service?sessionToken=e12d9c3f-75a8-4bd1-aa3d-97a2cfaf2c40&redirectUrl=undefined&templateId=2fb2da24-472a-4e5b-b160-038d9dc82a40"
                    },
                    "sessionToken": {
                      "type": "string",
                      "example": "e12d9c3f-75a8-4bd1-aa3d-97a2cfaf2c40"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"idempotencyKey is required\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "idempotencyKey is required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/activateOnRampRail": {
      "post": {
        "summary": "Activate fiat to stablecoin conversion for user",
        "description": "Enable ACH to stablecoin converstion for users. This is a billable event.",
        "operationId": "add-a-bank-account-for-usd-onramp-plaid-copy",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["rail", "destinationCurrency", "destinationChain"],
                "properties": {
                  "rail": {
                    "type": "string",
                    "description": "Passing \"US_ACH_WIRE\" to the rail parameter automatically enables ACH and Wire stablecoin conversion for the user.",
                    "enum": ["US_ACH_WIRE"]
                  },
                  "destinationCurrency": {
                    "type": "string",
                    "description": "`usdt` is allowed only on `ETHEREUM_MAINNET` at this moment",
                    "enum": ["usdc", "usdt"]
                  },
                  "destinationChain": {
                    "type": "string",
                    "enum": [
                      "POLYGON_MAINNET",
                      "ETHEREUM_MAINNET",
                      "OPTIMISM_MAINNET",
                      "BASE_MAINNET"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"message\": \"US_ACH rail created successfully\",\n    \"account\": {\n    \t\"virtualAccountId\": \"21593434-eb2a-4e44-a4d7-fc5700acd8a2\",\n    \t\"userId\": \"75d7c01f-5f93-43434-8b93-a62fd8020358\",\n    \t\"paymentRail\": \"ach_push\",\n    \t\"sourceCurrency\": \"usd\",\n    \t\"destinationChain\": \"POLYGON_MAINNET\",\n    \t\"destinationCurrency\": \"usdc\",\n    \t\"destinationWalletAddress\": \"0xBe64088c19d2F06890343bbE03A6125D7A23dec5\",\n    \t\"railStatus\": \"activated\",\n    \t\"depositInstructions\": {\n        \t\"bankName\": \"Lead Bank\",\n        \t\"routingNumber\": \"101023444\",\n        \t\"accountNumber\": \"223401218467\",\n        \t\"bankAddress\": \"1801 Main St., Kansas City, MO 64108\"\n    \t}\n\t\t}\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "US_ACH rail created successfully"
                    },
                    "account": {
                      "type": "object",
                      "properties": {
                        "virtualAccountId": {
                          "type": "string",
                          "example": "21593434-eb2a-4e44-a4d7-fc5700acd8a2"
                        },
                        "userId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-43434-8b93-a62fd8020358"
                        },
                        "paymentRail": {
                          "type": "string",
                          "example": "ach_push"
                        },
                        "sourceCurrency": {
                          "type": "string",
                          "example": "usd"
                        },
                        "destinationChain": {
                          "type": "string",
                          "example": "POLYGON_MAINNET"
                        },
                        "destinationCurrency": {
                          "type": "string",
                          "example": "usdc"
                        },
                        "destinationWalletAddress": {
                          "type": "string",
                          "example": "0xBe64088c19d2F06890343bbE03A6125D7A23dec5"
                        },
                        "railStatus": {
                          "type": "string",
                          "example": "activated"
                        },
                        "depositInstructions": {
                          "type": "object",
                          "properties": {
                            "bankName": {
                              "type": "string",
                              "example": "Lead Bank"
                            },
                            "routingNumber": {
                              "type": "string",
                              "example": "101023444"
                            },
                            "accountNumber": {
                              "type": "string",
                              "example": "223401218467"
                            },
                            "bankAddress": {
                              "type": "string",
                              "example": "1801 Main St., Kansas City, MO 64108"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\t\t\t\"message\": \"User is not allowed to create the rail\"\n\t\t\t}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not allowed to create the rail"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\t\t\t\"message\": \"Unexpected error happened\"\n\t\t\t}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "501",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"message\": \"rail is not yet implemented\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "rail is not yet implemented"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transfer/crypto-to-fiat": {
      "post": {
        "summary": "Liquidate stablecoin into a bank account",
        "description": "Liquidate stablecoin into fiat currency and send to a destination bank account",
        "operationId": "transfer-crypto-between-user-copy",
        "tags": ["Transfer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "requestId",
                  "sourceUserId",
                  "destinationUserId",
                  "destinationAccountId",
                  "sourceCurrency",
                  "destinationCurrency",
                  "amount",
                  "chain",
                  "paymentRail"
                ],
                "properties": {
                  "requestId": {
                    "type": "string",
                    "description": "Unique identifier for the transfer request (recommend using uuid v4)"
                  },
                  "sourceUserId": {
                    "type": "string"
                  },
                  "destinationUserId": {
                    "type": "string",
                    "description": "If destination account was created under the sourceUserId, the destinationUserId will be the same id. You can specify a different destinationUserId if offramping to a bank account created under a different userId than the sender."
                  },
                  "destinationAccountId": {
                    "type": "string",
                    "description": "Account Id of the destination bank account"
                  },
                  "sourceCurrency": {
                    "type": "string",
                    "enum": ["usdc", "usdt"]
                  },
                  "destinationCurrency": {
                    "type": "string",
                    "enum": ["usd"]
                  },
                  "amount": {
                    "type": "number",
                    "format": "float"
                  },
                  "chain": {
                    "type": "string",
                    "enum": ["POLYGON_MAINNET", "TRON"]
                  },
                  "paymentRail": {
                    "type": "string",
                    "enum": ["ach", "sepa", "wire"]
                  },
                  "description": {
                    "type": "string",
                    "description": "Required if paymentRail is \"wire\""
                  },
                  "purposeOfPayment": {
                    "type": "string",
                    "description": "Required if paymentRail is \"wire\"",
                    "enum": [
                      "payment_for_goods",
                      "payment_for_business_services",
                      "payment_for_salary_or_benefits",
                      "capital_investment_or_item",
                      "other"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"transferType\": \"CRYPTO_TO_FIAT\",\n    \"transferDetails\": {\n        \"id\": \"cb586edd-5f9c-475e-8909-4c65c2f03243\",\n        \"requestId\": \"233fb9a1-cf0d-425a-9d71-2f4b84040160\",\n        \"userId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"chain\": \"POLYGON_MAINNET\",\n        \"sourceCurrency\": \"usdc\",\n        \"amount\": 0.01,\n        \"destinationCurrency\": \"usd\",\n        \"destinationAccountId\": \"daa6ad75-a4c2-486f-a937-1bbf4d19553c\",\n        \"createdAt\": \"2024-06-25T20:58:32.152865+00:00\",\n        \"status\": \"SUBMITTED_ONCHAIN\",\n        \"contractAddress\": \"0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "transferType": {
                      "type": "string",
                      "example": "CRYPTO_TO_FIAT"
                    },
                    "transferDetails": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "cb586edd-5f9c-475e-8909-4c65c2f03243"
                        },
                        "requestId": {
                          "type": "string",
                          "example": "233fb9a1-cf0d-425a-9d71-2f4b84040160"
                        },
                        "userId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "chain": {
                          "type": "string",
                          "example": "POLYGON_MAINNET"
                        },
                        "sourceCurrency": {
                          "type": "string",
                          "example": "usdc"
                        },
                        "amount": {
                          "type": "number",
                          "example": 0.01,
                          "default": 0
                        },
                        "destinationCurrency": {
                          "type": "string",
                          "example": "usd"
                        },
                        "destinationAccountId": {
                          "type": "string",
                          "example": "daa6ad75-a4c2-486f-a937-1bbf4d19553c"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-06-25T20:58:32.152865+00:00"
                        },
                        "status": {
                          "type": "string",
                          "example": "SUBMITTED_ONCHAIN"
                        },
                        "contractAddress": {
                          "type": "string",
                          "example": "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"transfer amount exceeds balance\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "transfer amount exceeds balance"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Request for requestId is already exist, please use get transaction endpoint with id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Request for requestId is already exist, please use get transaction endpoint with id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Get a stablecoin-to-fiat liquidation transfer",
        "description": "Get the transfer history of a specific stablecoin to fiat transfer",
        "operationId": "get-crypto-to-crypto-transfer-record-copy",
        "tags": ["Transfer"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id of the transfer provided in the transferDetails object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"transferType\": \"CRYPTO_TO_FIAT\",\n    \"transferDetails\": {\n        \"id\": \"aa6dc614-d2d6-4592-8919-b07fb4d449b7\",\n        \"requestId\": \"27fff61f-593e-4636-9e77-8278b62426e3\",\n        \"sourceUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"destinationUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"chain\": \"POLYGON_MAINNET\",\n        \"sourceCurrency\": \"usdc\",\n        \"amount\": \"1\",\n        \"destinationCurrency\": \"usd\",\n        \"liquidationAddress\": \"0x2CE46FA28a4193EceCcf22bDCe5f0F4f421B55A7\",\n        \"destinationAccountId\": \"daa6ad75-a4c2-486f-a937-1bbf4d19553c\",\n        \"transactionHash\": \"0xa47d133f4c7a34a203e6c66a6979fd8e1423f2b53844c1eba00fa5837eb3be28\",\n        \"createdAt\": \"2024-06-24T16:12:14.587993+00:00\",\n        \"updatedAt\": \"2024-06-29T20:41:18.027049+00:00\",\n        \"status\": \"COMPLETED\",\n        \"contractAddress\": \"0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359\",\n        \"sourceUser\": {\n            \"business_name\": null,\n            \"legal_last_name\": \"YANG\",\n            \"compliance_email\": \"william@hifibridge.com\",\n            \"legal_first_name\": \"William\"\n        },\n        \"destinationUser\": {\n            \"business_name\": null,\n            \"legal_last_name\": \"Gutix\",\n            \"compliance_email\": \"Max@gmail.com\",\n            \"legal_first_name\": \"Max\"\n        },\n        \"destinationAccount\": {\n            \"id\": \"daa6ad75-a4c2-486f-a937-1bbf4d19553c\",\n            \"account_owner_name\": \"Max Gutix\",\n            \"bank_name\": \"Bank of America\",\n            \"account_number\": \"48899917874\",\n            \"routing_number\": \"0012300322\",\n            \"account_type\": \"us\",\n            \"business_identifier_code\": null,\n            \"bank_country\": null,\n            \"iban\": null,\n            \"beneficiary_first_name\": null,\n            \"beneficiary_last_name\": null\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "transferType": {
                      "type": "string",
                      "example": "CRYPTO_TO_FIAT"
                    },
                    "transferDetails": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "aa6dc614-d2d6-4592-8919-b07fb4d449b7"
                        },
                        "requestId": {
                          "type": "string",
                          "example": "27fff61f-593e-4636-9e77-8278b62426e3"
                        },
                        "sourceUserId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "destinationUserId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "chain": {
                          "type": "string",
                          "example": "POLYGON_MAINNET"
                        },
                        "sourceCurrency": {
                          "type": "string",
                          "example": "usdc"
                        },
                        "amount": {
                          "type": "string",
                          "example": "1"
                        },
                        "destinationCurrency": {
                          "type": "string",
                          "example": "usd"
                        },
                        "liquidationAddress": {
                          "type": "string",
                          "example": "0x2CE46FA28a4193EceCcf22bDCe5f0F4f421B55A7"
                        },
                        "destinationAccountId": {
                          "type": "string",
                          "example": "daa6ad75-a4c2-486f-a937-1bbf4d19553c"
                        },
                        "transactionHash": {
                          "type": "string",
                          "example": "0xa47d133f4c7a34a203e6c66a6979fd8e1423f2b53844c1eba00fa5837eb3be28"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-06-24T16:12:14.587993+00:00"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2024-06-29T20:41:18.027049+00:00"
                        },
                        "status": {
                          "type": "string",
                          "example": "COMPLETED"
                        },
                        "contractAddress": {
                          "type": "string",
                          "example": "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359"
                        },
                        "sourceUser": {
                          "type": "object",
                          "properties": {
                            "business_name": {},
                            "legal_last_name": {
                              "type": "string",
                              "example": "YANG"
                            },
                            "compliance_email": {
                              "type": "string",
                              "example": "william@hifibridge.com"
                            },
                            "legal_first_name": {
                              "type": "string",
                              "example": "William"
                            }
                          }
                        },
                        "destinationUser": {
                          "type": "object",
                          "properties": {
                            "business_name": {},
                            "legal_last_name": {
                              "type": "string",
                              "example": "Gutix"
                            },
                            "compliance_email": {
                              "type": "string",
                              "example": "Max@gmail.com"
                            },
                            "legal_first_name": {
                              "type": "string",
                              "example": "Max"
                            }
                          }
                        },
                        "destinationAccount": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "daa6ad75-a4c2-486f-a937-1bbf4d19553c"
                            },
                            "account_owner_name": {
                              "type": "string",
                              "example": "Max Gutix"
                            },
                            "bank_name": {
                              "type": "string",
                              "example": "Bank of America"
                            },
                            "account_number": {
                              "type": "string",
                              "example": "48899917874"
                            },
                            "routing_number": {
                              "type": "string",
                              "example": "0012300322"
                            },
                            "account_type": {
                              "type": "string",
                              "example": "us"
                            },
                            "business_identifier_code": {},
                            "bank_country": {},
                            "iban": {},
                            "beneficiary_first_name": {},
                            "beneficiary_last_name": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"id is required\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "id is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"No transaction found for id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No transaction found for id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transfer/fiat-to-crypto": {
      "post": {
        "summary": "Convert fiat into stablecoin",
        "description": "Move fiat funds in a bank account into stablecoin on the blockchain",
        "operationId": "transfer-crypto-to-fiat-bank-account-copy",
        "tags": ["Transfer"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "requestId",
                  "sourceUserId",
                  "sourceAccountId",
                  "destinationUserId",
                  "sourceCurrency",
                  "destinationCurrency",
                  "amount",
                  "chain",
                  "isInstant"
                ],
                "properties": {
                  "requestId": {
                    "type": "string",
                    "description": "Unique identifier for the transfer request (recommend using uuid v4)"
                  },
                  "sourceUserId": {
                    "type": "string",
                    "description": "User which will be pull the fiat bank account from"
                  },
                  "sourceAccountId": {
                    "type": "string",
                    "description": "Account Id of the source bank account"
                  },
                  "destinationUserId": {
                    "type": "string",
                    "description": "User which will be receiving the crypto"
                  },
                  "sourceCurrency": {
                    "type": "string",
                    "enum": ["usd"]
                  },
                  "destinationCurrency": {
                    "type": "string",
                    "description": "`usdt` is only allowed on `ETHEREUM_MAINNET` and has a minimum requirement of 20 usdt",
                    "enum": ["usdc", "usdt"]
                  },
                  "amount": {
                    "type": "number",
                    "format": "float"
                  },
                  "chain": {
                    "type": "string",
                    "enum": ["POLYGON_MAINNET"]
                  },
                  "isInstant": {
                    "type": "boolean",
                    "description": "(Not implemented yet)",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"transferType\": \"FIAT_TO_CRYPTO\",\n    \"transferDetails\": {\n        \"id\": \"312410a2-9c1b-4337-afeb-71dad9da3428\",\n        \"requestId\": \"984da3b6-b930-4641-87ab-93fc131ba0f8\",\n        \"sourceUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"destinationUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"chain\": \"POLYGON_MAINNET\",\n        \"sourceCurrency\": \"usd\",\n        \"amount\": 1,\n        \"destinationCurrency\": \"usdc\",\n        \"sourceAccountId\": \"0de2ae79-737d-4266-8c7d-ec82df476d3a\",\n        \"createdAt\": \"2024-06-26T18:50:16.653318+00:00\",\n        \"status\": \"FIAT_SUBMITTED\",\n        \"isInstant\": false\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "transferType": {
                      "type": "string",
                      "example": "FIAT_TO_CRYPTO"
                    },
                    "transferDetails": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "312410a2-9c1b-4337-afeb-71dad9da3428"
                        },
                        "requestId": {
                          "type": "string",
                          "example": "984da3b6-b930-4641-87ab-93fc131ba0f8"
                        },
                        "sourceUserId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "destinationUserId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "chain": {
                          "type": "string",
                          "example": "POLYGON_MAINNET"
                        },
                        "sourceCurrency": {
                          "type": "string",
                          "example": "usd"
                        },
                        "amount": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "destinationCurrency": {
                          "type": "string",
                          "example": "usdc"
                        },
                        "sourceAccountId": {
                          "type": "string",
                          "example": "0de2ae79-737d-4266-8c7d-ec82df476d3a"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-06-26T18:50:16.653318+00:00"
                        },
                        "status": {
                          "type": "string",
                          "example": "FIAT_SUBMITTED"
                        },
                        "isInstant": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unsupported rail for sourceCurrency to destinationCurrency\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unsupported rail for sourceCurrency to destinationCurrency"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Request for requestId is already exist, please use get transaction endpoint with id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Request for requestId is already exist, please use get transaction endpoint with id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Get fiat to stablecoin transfer record",
        "description": "Get the transfer history of a specific fiat to stablecoin transfer",
        "operationId": "get-crypto-to-fiat-transfer-record-copy",
        "tags": ["Transfer"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id of the transfer provided in the transferDetails object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"transferType\": \"FIAT_TO_CRYPTO\",\n    \"transferDetails\": {\n        \"id\": \"90f44c5f-98d2-4a91-bfd1-6293516a7eb4\",\n        \"requestId\": \"d882c878-61af-4d7c-ac3a-641276d0f505\",\n        \"sourceUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"destinationUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n        \"transactionHash\": null,\n        \"chain\": \"POLYGON_MAINNET\",\n        \"sourceCurrency\": \"usd\",\n        \"amount\": \"1\",\n        \"destinationCurrency\": \"usdc\",\n        \"sourceAccountId\": \"0de2ae79-737d-4266-8c7d-ec82df476d3a\",\n        \"createdAt\": \"2024-06-25T01:22:25.685958+00:00\",\n        \"updatedAt\": \"2024-06-29T20:41:34.514607+00:00\",\n        \"status\": \"FIAT_PROCESSED\",\n        \"sourceUser\": {\n            \"business_name\": null,\n            \"legal_last_name\": \"Ming\",\n            \"compliance_email\": \"Ming@gmail.com\",\n            \"legal_first_name\": \"Liu\"\n        },\n        \"destinationUser\": {\n            \"business_name\": null,\n            \"legal_last_name\": \"YANG\",\n            \"compliance_email\": \"william@hifibridge.com\",\n            \"legal_first_name\": \"William\"\n        },\n        \"sourceAccount\": {\n            \"id\": \"0de2ae79-737d-4266-8c7d-ec82df476d3a\",\n            \"account_number\": \"2374\",\n            \"routing_number\": \"021234322\",\n            \"bank_name\": \"Chase\"\n        }\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "transferType": {
                      "type": "string",
                      "example": "FIAT_TO_CRYPTO"
                    },
                    "transferDetails": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "90f44c5f-98d2-4a91-bfd1-6293516a7eb4"
                        },
                        "requestId": {
                          "type": "string",
                          "example": "d882c878-61af-4d7c-ac3a-641276d0f505"
                        },
                        "sourceUserId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "destinationUserId": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        },
                        "transactionHash": {},
                        "chain": {
                          "type": "string",
                          "example": "POLYGON_MAINNET"
                        },
                        "sourceCurrency": {
                          "type": "string",
                          "example": "usd"
                        },
                        "amount": {
                          "type": "string",
                          "example": "1"
                        },
                        "destinationCurrency": {
                          "type": "string",
                          "example": "usdc"
                        },
                        "sourceAccountId": {
                          "type": "string",
                          "example": "0de2ae79-737d-4266-8c7d-ec82df476d3a"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2024-06-25T01:22:25.685958+00:00"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2024-06-29T20:41:34.514607+00:00"
                        },
                        "status": {
                          "type": "string",
                          "example": "FIAT_PROCESSED"
                        },
                        "sourceUser": {
                          "type": "object",
                          "properties": {
                            "business_name": {},
                            "legal_last_name": {
                              "type": "string",
                              "example": "Ming"
                            },
                            "compliance_email": {
                              "type": "string",
                              "example": "Ming@gmail.com"
                            },
                            "legal_first_name": {
                              "type": "string",
                              "example": "Liu"
                            }
                          }
                        },
                        "destinationUser": {
                          "type": "object",
                          "properties": {
                            "business_name": {},
                            "legal_last_name": {
                              "type": "string",
                              "example": "YANG"
                            },
                            "compliance_email": {
                              "type": "string",
                              "example": "william@hifibridge.com"
                            },
                            "legal_first_name": {
                              "type": "string",
                              "example": "William"
                            }
                          }
                        },
                        "sourceAccount": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "0de2ae79-737d-4266-8c7d-ec82df476d3a"
                            },
                            "account_number": {
                              "type": "string",
                              "example": "2374"
                            },
                            "routing_number": {
                              "type": "string",
                              "example": "021234322"
                            },
                            "bank_name": {
                              "type": "string",
                              "example": "Chase"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"id is required\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "id is required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"No transaction found for id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No transaction found for id: c8cf0e6d-3cdb-4cf7-b089-4f640bd0c59d"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/create#business": {
      "post": {
        "summary": "Create User (Business)",
        "description": "This endpoint handles user creation in an asynchronous manner. Polling the GET /user endpoint after creating the user is highly recommended. Note that adding \"#business\" at the end of the url is optional.",
        "operationId": "create-user-copy-1",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userType",
                  "businessName",
                  "businessDescription",
                  "complianceEmail",
                  "sourceOfFunds",
                  "businessType",
                  "taxIdentificationNumber",
                  "website",
                  "addressLine1",
                  "city",
                  "stateProvinceRegion",
                  "postalCode",
                  "country",
                  "ipAddress",
                  "signedAgreementId",
                  "formationDoc",
                  "proofOfOwnership",
                  "transmitsCustomerFunds",
                  "isDao",
                  "ultimateBeneficialOwners"
                ],
                "properties": {
                  "userType": {
                    "type": "string",
                    "enum": ["business"]
                  },
                  "businessName": {
                    "type": "string"
                  },
                  "businessDescription": {
                    "type": "string"
                  },
                  "complianceEmail": {
                    "type": "string",
                    "description": "Email address for compliance-related communications."
                  },
                  "sourceOfFunds": {
                    "type": "string",
                    "description": "The source of funds for the business, e.g. profits, income, venture capital, etc."
                  },
                  "businessType": {
                    "type": "string",
                    "description": "The type of business structure that most closely matches the business customer",
                    "enum": [
                      "cooperative",
                      "corporation",
                      "llc",
                      "other",
                      "partnership",
                      "sole_prop",
                      "trust"
                    ]
                  },
                  "taxIdentificationNumber": {
                    "type": "string",
                    "description": "For individual US customers, SSN should be used. For non-US individual customers, a national ID is preferred where applicable; however, a tax ID can also be used as an alternative."
                  },
                  "website": {
                    "type": "string"
                  },
                  "addressLine1": {
                    "type": "string"
                  },
                  "addressLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "stateProvinceRegion": {
                    "type": "string",
                    "description": "ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions."
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Must be supplied for countries that use postal codes."
                  },
                  "country": {
                    "type": "string",
                    "description": "Three-letter alpha-3 country code as defined in the ISO 3166-1 spec."
                  },
                  "ipAddress": {
                    "type": "string",
                    "description": "IP address of the user."
                  },
                  "signedAgreementId": {
                    "type": "string",
                    "description": "ID of the signed agreement, fetched through the HIFI's Hosted Terms of Service Link POST /tos-link"
                  },
                  "formationDoc": {
                    "type": "string",
                    "description": "URL of  image of the formation documentation  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                  },
                  "proofOfOwnership": {
                    "type": "string",
                    "description": "URL of  image of the ownership documentation  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                  },
                  "transmitsCustomerFunds": {
                    "type": "boolean",
                    "description": "True if the business transmits funds on behalf of its customers (i.e. transmitsCustomerFunds == true)"
                  },
                  "complianceScreeningExplanation": {
                    "type": "string",
                    "description": "Required if transmits_customer_funds is true. An explanation of types of compliance screening (KYC, KYB, or AML) the customer performs before transmitting funds on behalf of its customers."
                  },
                  "isDao": {
                    "type": "boolean",
                    "description": "Whether the business is a DAO (Decentralized Autonomous Organization)"
                  },
                  "ultimateBeneficialOwners": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "legalFirstName": {
                          "type": "string"
                        },
                        "legalLastName": {
                          "type": "string"
                        },
                        "complianceEmail": {
                          "type": "string"
                        },
                        "compliancePhone": {
                          "type": "string"
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "description": "Date of birth in format yyyy-mm-dd"
                        },
                        "taxIdentificationNumber": {
                          "type": "string"
                        },
                        "govIdCountry": {
                          "type": "string",
                          "description": "Three-letter alpha-3 country code of the submitted government id as defined in the ISO 3166-1 spec."
                        },
                        "country": {
                          "type": "string",
                          "description": "Three-letter alpha-3 country code as defined in the ISO 3166-1 spec."
                        },
                        "addressLine1": {
                          "type": "string"
                        },
                        "addressLine2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "stateProvinceRegion": {
                          "type": "string",
                          "description": "ISO 3166-2 subdivision code. Must be supplied if the country has subdivisions."
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "Must be supplied for countries that use postal codes."
                        },
                        "govIdFront": {
                          "type": "string",
                          "description": "URL of image of the government issued ID  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                        },
                        "govIdBack": {
                          "type": "string",
                          "description": "URL of  image of the government issued ID  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                        },
                        "proofOfResidency": {
                          "type": "string",
                          "description": "URL of  image of the proof of address  Valid file types: .pdf, .jpeg, .jpg, .png, .heic, .tif"
                        }
                      },
                      "required": [
                        "legalFirstName",
                        "legalLastName",
                        "complianceEmail",
                        "compliancePhone",
                        "dateOfBirth",
                        "taxIdentificationNumber",
                        "country",
                        "addressLine1",
                        "city",
                        "stateProvinceRegion",
                        "govIdFront"
                      ],
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"wallet\": {\n        \"walletStatus\": \"ACTIVE\",\n        \"walletMessage\": \"\",\n        \"actionNeeded\": {\n            \"actions\": [],\n            \"fieldsToResubmit\": []\n        },\n        \"walletAddress\": {\n            \"POLYGON_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            },\n            \"ETHEREUM_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            },\n            \"OPTIMISM_MAINNET\": {\n                \"address\": \"0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5\"\n            }\n        }\n    },\n    \"user_kyc\": {\n        \"status\": \"PENDING\",\n        \"actionNeeded\": {\n            \"actions\": [],\n            \"fieldsToResubmit\": []\n        }\n    },\n    \"ramps\": {\n        \"usdAch\": {\n            \"onRamp\": {\n                \"status\": \"PENDING\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"\",\n                \"achPull\": {\n                    \"achPullStatus\": \"ACTIVE\",\n                    \"actionNeeded\": {\n                        \"actions\": [],\n                        \"fieldsToResubmit\": []\n                    }\n                }\n            },\n            \"offRamp\": {\n                \"status\": \"PENDING\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                }\n            }\n        },\n        \"euroSepa\": {\n            \"onRamp\": {\n                \"status\": \"INACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"SEPA onRamp will be available in near future\"\n            },\n            \"offRamp\": {\n                \"status\": \"ACTIVE\",\n                \"actionNeeded\": {\n                    \"actions\": [],\n                    \"fieldsToResubmit\": []\n                },\n                \"message\": \"\"\n            }\n        }\n    },\n    \"user\": {\n        \"id\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\"\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "wallet": {
                      "type": "object",
                      "properties": {
                        "walletStatus": {
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "walletMessage": {
                          "type": "string",
                          "example": ""
                        },
                        "actionNeeded": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array"
                            },
                            "fieldsToResubmit": {
                              "type": "array"
                            }
                          }
                        },
                        "walletAddress": {
                          "type": "object",
                          "properties": {
                            "POLYGON_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            },
                            "ETHEREUM_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            },
                            "OPTIMISM_MAINNET": {
                              "type": "object",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "example": "0xBe64088c19d2F06890ec6bbE03A6125D7A23dec5"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "user_kyc": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "PENDING"
                        },
                        "actionNeeded": {
                          "type": "object",
                          "properties": {
                            "actions": {
                              "type": "array"
                            },
                            "fieldsToResubmit": {
                              "type": "array"
                            }
                          }
                        }
                      }
                    },
                    "ramps": {
                      "type": "object",
                      "properties": {
                        "usdAch": {
                          "type": "object",
                          "properties": {
                            "onRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "PENDING"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": ""
                                },
                                "achPull": {
                                  "type": "object",
                                  "properties": {
                                    "achPullStatus": {
                                      "type": "string",
                                      "example": "ACTIVE"
                                    },
                                    "actionNeeded": {
                                      "type": "object",
                                      "properties": {
                                        "actions": {
                                          "type": "array"
                                        },
                                        "fieldsToResubmit": {
                                          "type": "array"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "offRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "PENDING"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "euroSepa": {
                          "type": "object",
                          "properties": {
                            "onRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "INACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": "SEPA onRamp will be available in near future"
                                }
                              }
                            },
                            "offRamp": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "example": "ACTIVE"
                                },
                                "actionNeeded": {
                                  "type": "object",
                                  "properties": {
                                    "actions": {
                                      "type": "array"
                                    },
                                    "fieldsToResubmit": {
                                      "type": "array"
                                    }
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "example": ""
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"fields provided are either missing or invalid\", \"missing_fields\": [], \"invalid_fields\": [] }"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "Unsupported area (ipAddress)"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "example": "fields provided are either missing or invalid"
                        },
                        "missing_fields": {
                          "type": "array"
                        },
                        "invalid_fields": {
                          "type": "array"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"Unexpected error happened, please contact HIFI for more information\" }"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened, please contact HIFI for more information"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/usd/offramp/wire": {
      "post": {
        "summary": "Add a Wire destination bank account for stablecoin liquidations",
        "description": "",
        "tags": ["Account"],
        "operationId": "add-a-ach-destination-bank-account-for-stablecoin-liquidations-copy",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currency",
                  "bankName",
                  "accountNumber",
                  "streetLine1",
                  "city",
                  "state",
                  "postalCode",
                  "country",
                  "accountOwnerType",
                  "businessName"
                ],
                "properties": {
                  "currency": {
                    "type": "string",
                    "default": "usd",
                    "enum": ["usd"]
                  },
                  "bankName": {
                    "type": "string",
                    "description": "e.g. Chase"
                  },
                  "bankIdentifierCode": {
                    "type": "string"
                  },
                  "iban": {
                    "type": "string",
                    "description": "Either a swift account number or iban must be provided"
                  },
                  "accountNumber": {
                    "type": "string",
                    "description": "Either a swift account number or iban must be provided"
                  },
                  "streetLine1": {
                    "type": "string"
                  },
                  "streetLine2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "description": "ISO 3166-2 subdivision code."
                  },
                  "postalCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string",
                    "description": "Three-letter alpha-3 country code as defined in the ISO 3166-1 spec. Currently must be passed as \"USA\"."
                  },
                  "accountOwnerType": {
                    "type": "string",
                    "enum": ["individual", "business"]
                  },
                  "businessName": {
                    "type": "string",
                    "description": "Required if the accountOwnerType is \"business\""
                  },
                  "firstName": {
                    "type": "string",
                    "description": "Required if the accountOwnerType is \"individual\""
                  },
                  "middleName": {
                    "type": "string",
                    "description": "Required if the accountOwnerType is \"individual\""
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Required if the accountOwnerType is \"individual\""
                  },
                  "legalFullName": {
                    "type": "string",
                    "description": "Required if the accountOwnerType is \"individual\""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"status\": \"ACTIVE\",\n    \"invalidFields\": [],\n    \"message\": \"Account created successfully\",\n    \"id\": \"daa6ad75-a4c2-486f-a937-1bbf4d19553a\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "invalidFields": {
                      "type": "array"
                    },
                    "message": {
                      "type": "string",
                      "example": "Account created successfully"
                    },
                    "id": {
                      "type": "string",
                      "example": "daa6ad75-a4c2-486f-a937-1bbf4d19553a"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": 'Missing required fields', \"missingFields\": []}"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\":\"Internal Server Error}"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/user/all": {
      "get": {
        "summary": "Get All Users",
        "description": "Get all the users created under your organization",
        "operationId": "get-user-copy-1",
        "tags": ["User"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "default to 10, maximum to 100",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "format: YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "format: YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userType",
            "in": "query",
            "description": "If userType is passed will get all users under the type",
            "schema": {
              "type": "string",
              "enum": ["individual", "business"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"count\": 1,\n    \"users\": [\n        {\n            \"userId\": \"ac1083dc-dbd9-40fe-a2aa-eb20e3ef643b\",\n            \"userType\": \"individual\",\n            \"name\": \"Samuel Yoon\",\n            \"dateOfBirth\": \"1995-01-17T00:00:00+00:00\",\n            \"email\": \"sam@hifibridge.com\",\n            \"phone\": \"+17022025658\",\n            \"createdAt\": \"2024-07-01T16:13:57.984Z\",\n            \"userKycStatus\": \"ACTIVE\",\n            \"walletStatus\": \"ACTIVE\",\n            \"walletAddress\": [\n                {\n                    \"chain\": \"POLYGON_MAINNET\",\n                    \"address\": \"0xe663Ab2F5aA1d37664aE8201c571F6F82D8A759f\"\n                },\n                {\n                    \"chain\": \"ETHEREUM_MAINNET\",\n                    \"address\": \"0xe663Ab2F5aA1d37664aE8201c571F6F82D8A759f\"\n                },\n                {\n                    \"chain\": \"OPTIMISM_MAINNET\",\n                    \"address\": \"0xe663Ab2F5aA1d37664aE8201c571F6F82D8A759f\"\n                }\n            ]\n        },\n      ]\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"fields provided are either missing or invalid\" }"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "fields provided are either missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/all": {
      "get": {
        "summary": "Get All Accounts",
        "description": "Returns all bank accounts that was added with HIFI's /account endpoints",
        "operationId": "get-account-copy",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "railType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["usOnRamp", "usOffRamp", "euOffRamp", "usOffRamp-wire"]
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Return all accounts of a certain railType of this user if userId is provided",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default to 10, maximum to 100",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "format YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "format YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"count\": 2,\n    \"banks\": [\n        {\n            \"accountId\": \"8d7aa42b-d845-4490-a6a7-ffc16ad88888\",\n            \"userId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n            \"createdAt\": \"2024-06-23T16:36:56.687377+00:00\",\n            \"accountType\": \"CHECKING\",\n            \"accountNumber\": \"5206\",\n            \"routingNumber\": \"028450121\",\n            \"bankName\": \"Chase\"\n        },\n        {\n            \"accountId\": \"c15ede07-79ec-4c48-9f3e-038bb15a47ec\",\n            \"userId\": \"0c91a2a3-b0da-4779-bd15-2b29b8854de4\",\n            \"createdAt\": \"2024-06-23T16:27:17.100788+00:00\",\n            \"accountType\": \"CHECKING\",\n            \"accountNumber\": \"5206\",\n            \"routingNumber\": \"058400121\",\n            \"bankName\": \"Chase\"\n        }\n    ],\n    \"railType\": \"usOnRamp\"\n}"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "banks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "type": "string",
                                "example": "daa6ad73-a4c2-486f-a937-1bbf4d19553c"
                              },
                              "userId": {
                                "type": "string",
                                "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2024-06-20T14:06:28.591178+00:00"
                              },
                              "currency": {
                                "type": "string",
                                "example": "usd"
                              },
                              "bankName": {
                                "type": "string",
                                "example": "Bank of Aerica"
                              },
                              "accountOwnerName": {
                                "type": "string",
                                "example": "Doge, Fang"
                              },
                              "accountOwnerType": {
                                "type": "string",
                                "example": "individual"
                              },
                              "accountType": {
                                "type": "string",
                                "example": "us"
                              },
                              "beneficiaryStreetLine1": {
                                "type": "string",
                                "example": "123 main Rd."
                              },
                              "beneficiaryStreetLine2": {},
                              "beneficiaryCity": {
                                "type": "string",
                                "example": "New York"
                              },
                              "beneficiaryState": {
                                "type": "string",
                                "example": "NY"
                              },
                              "beneficiaryPostalCode": {
                                "type": "string",
                                "example": "10034"
                              },
                              "beneficiaryCountry": {
                                "type": "string",
                                "example": "USA"
                              },
                              "iban": {},
                              "businessIdentifierCode": {},
                              "bankCountry": {},
                              "accountNumber": {
                                "type": "string",
                                "example": "4831018847874"
                              },
                              "routingNumber": {
                                "type": "string",
                                "example": "021220322"
                              }
                            }
                          }
                        },
                        "railType": {
                          "type": "string",
                          "example": "usOffRamp"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        },
                        "banks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "type": "string",
                                "example": "8d7aa42b-d845-4490-a6a7-ffc16ad88888"
                              },
                              "userId": {
                                "type": "string",
                                "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2024-06-23T16:36:56.687377+00:00"
                              },
                              "accountType": {
                                "type": "string",
                                "example": "CHECKING"
                              },
                              "accountNumber": {
                                "type": "string",
                                "example": "5206"
                              },
                              "routingNumber": {
                                "type": "string",
                                "example": "028450121"
                              },
                              "bankName": {
                                "type": "string",
                                "example": "Chase"
                              }
                            }
                          }
                        },
                        "railType": {
                          "type": "string",
                          "example": "usOnRamp"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": 'Invalid railType' }"
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{ \"error\": \"No account found\" }"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "No account found"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transfer/crypto-to-crypto/all": {
      "get": {
        "summary": "Get all wallet-to-wallet transfer record",
        "description": "Get all the transfer history of a user as a sender or all transfer records of your organization",
        "operationId": "get-a-wallet-to-wallet-transfer-record-copy",
        "tags": ["Transfer"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Return all transfer record for this user if userId is provided",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default to 10, maximum to 100",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "format: YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "format: YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"count\": 1,\n    \"records\": [\n        {\n            \"transferType\": \"CRYPTO_TO_CRYPTO\",\n            \"transferDetails\": {\n                \"id\": \"a1f353d1-125a-4d29-93ca-091e2629dfda\",\n                \"requestId\": \"97fc3608-8a0b-4f4a-9737-1a846162883e\",\n                \"senderUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n                \"recipientUserId\": null,\n                \"recipientAddress\": \"0x76F8fc6667E239f83a547d4e16225d6a34f6FA22\",\n                \"chain\": \"POLYGON_MAINNET\",\n                \"currency\": \"usdc\",\n                \"transactionHash\": \"0x70a1cb166cebabbdffbd93d7c34ca851a10deac27fc0217915294360c13d59b6\",\n                \"createdAt\": \"2024-06-28T17:08:37.553931+00:00\",\n                \"updatedAt\": \"2024-06-28T17:09:01.222+00:00\",\n                \"status\": \"CONFIRMED\",\n                \"contractAddress\": \"0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359\",\n                \"sender\": {\n                  \"business_name\": null,\n                  \"legal_last_name\": \"YANG\",\n                  \"compliance_email\": \"william@hifibridge.com\",\n                  \"legal_first_name\": \"William\"\n                },\n                \"recipient\": {\n                  \"business_name\": null,\n                  \"legal_last_name\": \"YANG 2\",\n                  \"compliance_email\": \"willyyang777@gmail.com\",\n                  \"legal_first_name\": \"William\"\n                }\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transferType": {
                            "type": "string",
                            "example": "CRYPTO_TO_CRYPTO"
                          },
                          "transferDetails": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "a1f353d1-125a-4d29-93ca-091e2629dfda"
                              },
                              "requestId": {
                                "type": "string",
                                "example": "97fc3608-8a0b-4f4a-9737-1a846162883e"
                              },
                              "senderUserId": {
                                "type": "string",
                                "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                              },
                              "recipientUserId": {},
                              "recipientAddress": {
                                "type": "string",
                                "example": "0x76F8fc6667E239f83a547d4e16225d6a34f6FA22"
                              },
                              "chain": {
                                "type": "string",
                                "example": "POLYGON_MAINNET"
                              },
                              "currency": {
                                "type": "string",
                                "example": "usdc"
                              },
                              "transactionHash": {
                                "type": "string",
                                "example": "0x70a1cb166cebabbdffbd93d7c34ca851a10deac27fc0217915294360c13d59b6"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2024-06-28T17:08:37.553931+00:00"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2024-06-28T17:09:01.222+00:00"
                              },
                              "status": {
                                "type": "string",
                                "example": "CONFIRMED"
                              },
                              "contractAddress": {
                                "type": "string",
                                "example": "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359"
                              },
                              "sender": {
                                "type": "object",
                                "properties": {
                                  "business_name": {},
                                  "legal_last_name": {
                                    "type": "string",
                                    "example": "YANG"
                                  },
                                  "compliance_email": {
                                    "type": "string",
                                    "example": "william@hifibridge.com"
                                  },
                                  "legal_first_name": {
                                    "type": "string",
                                    "example": "William"
                                  }
                                }
                              },
                              "recipient": {
                                "type": "object",
                                "properties": {
                                  "business_name": {},
                                  "legal_last_name": {
                                    "type": "string",
                                    "example": "YANG 2"
                                  },
                                  "compliance_email": {
                                    "type": "string",
                                    "example": "willyyang777@gmail.com"
                                  },
                                  "legal_first_name": {
                                    "type": "string",
                                    "example": "William"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"fields provided are either missing or invalid\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "fields provided are either missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error ahppened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error ahppened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transfer/crypto-to-fiat/all": {
      "get": {
        "summary": "Get all stablecoin-to-fiat liquidation transfer",
        "description": "Get all the transfer history of a user or your organization",
        "operationId": "get-a-stablecoin-to-fiat-liquidation-transfer-copy",
        "tags": ["Transfer"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Return records of this user if userId is provided",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default to 10, maximum to 100",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "format: YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "format: YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"count\": 1,\n    \"records\": [\n        {\n            \"transferType\": \"CRYPTO_TO_FIAT\",\n            \"transferDetails\": {\n                \"id\": \"f77eb6e4-8a10-4925-9c8d-0cf7ac0b563f\",\n                \"requestId\": \"8f81b245-577a-4a39-b93c-5717c548e989\",\n                \"sourceUserId\": \"ac1083dc-dbd9-40fe-a2aa-eb20e3ef643b\",\n                \"destinationUserId\": \"ac1083dc-dbd9-40fe-a2aa-eb20e3ef643b\",\n                \"chain\": \"polygon\",\n                \"sourceCurrency\": \"usdc\",\n                \"amount\": \"1\",\n                \"destinationCurrency\": \"usd\",\n                \"destinationAccountId\": \"p3ce697e-32e4-4d4a-a8ee-d0ffd738f6be\",\n                \"transactionHash\": \"0xbc6efc49aa0b014bc8b71511371ebc7257507d056717f9d11c52e3be50aa870c\",\n                \"createdAt\": \"2024-07-01T19:16:51.31129+00:00\",\n                \"updatedAt\": \"2024-07-01T20:19:01.434+00:00\",\n                \"status\": \"COMPLETED\",\n                \"contractAddress\": \"0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359\",\n                \"sourceUser\": {\n                  \"business_name\": null,\n                  \"legal_last_name\": \"YANG\",\n                  \"compliance_email\": \"william@hifibridge.com\",\n                  \"legal_first_name\": \"William\"\n                },\n                \"destinationUser\": {\n                  \"business_name\": null,\n                  \"legal_last_name\": \"Gutix\",\n                  \"compliance_email\": \"Max@gmail.com\",\n                  \"legal_first_name\": \"Max\"\n                },\n                \"destinationAccount\": {\n                  \"id\": \"daa6ad75-a4c2-486f-a937-1bbf4d19553c\",\n                  \"account_owner_name\": \"Max Gutix\",\n                  \"bank_name\": \"Bank of Aerica\",\n                  \"account_number\": \"48234817874\",\n                  \"routing_number\": \"02123322\",\n                  \"account_type\": \"us\",\n                  \"business_identifier_code\": null,\n                  \"bank_country\": null,\n                  \"iban\": null,\n                  \"beneficiary_first_name\": null,\n                  \"beneficiary_last_name\": null\n                }\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transferType": {
                            "type": "string",
                            "example": "CRYPTO_TO_FIAT"
                          },
                          "transferDetails": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "f77eb6e4-8a10-4925-9c8d-0cf7ac0b563f"
                              },
                              "requestId": {
                                "type": "string",
                                "example": "8f81b245-577a-4a39-b93c-5717c548e989"
                              },
                              "sourceUserId": {
                                "type": "string",
                                "example": "ac1083dc-dbd9-40fe-a2aa-eb20e3ef643b"
                              },
                              "destinationUserId": {
                                "type": "string",
                                "example": "ac1083dc-dbd9-40fe-a2aa-eb20e3ef643b"
                              },
                              "chain": {
                                "type": "string",
                                "example": "polygon"
                              },
                              "sourceCurrency": {
                                "type": "string",
                                "example": "usdc"
                              },
                              "amount": {
                                "type": "string",
                                "example": "1"
                              },
                              "destinationCurrency": {
                                "type": "string",
                                "example": "usd"
                              },
                              "destinationAccountId": {
                                "type": "string",
                                "example": "p3ce697e-32e4-4d4a-a8ee-d0ffd738f6be"
                              },
                              "transactionHash": {
                                "type": "string",
                                "example": "0xbc6efc49aa0b014bc8b71511371ebc7257507d056717f9d11c52e3be50aa870c"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2024-07-01T19:16:51.31129+00:00"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2024-07-01T20:19:01.434+00:00"
                              },
                              "status": {
                                "type": "string",
                                "example": "COMPLETED"
                              },
                              "contractAddress": {
                                "type": "string",
                                "example": "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359"
                              },
                              "sourceUser": {
                                "type": "object",
                                "properties": {
                                  "business_name": {},
                                  "legal_last_name": {
                                    "type": "string",
                                    "example": "YANG"
                                  },
                                  "compliance_email": {
                                    "type": "string",
                                    "example": "william@hifibridge.com"
                                  },
                                  "legal_first_name": {
                                    "type": "string",
                                    "example": "William"
                                  }
                                }
                              },
                              "destinationUser": {
                                "type": "object",
                                "properties": {
                                  "business_name": {},
                                  "legal_last_name": {
                                    "type": "string",
                                    "example": "Gutix"
                                  },
                                  "compliance_email": {
                                    "type": "string",
                                    "example": "Max@gmail.com"
                                  },
                                  "legal_first_name": {
                                    "type": "string",
                                    "example": "Max"
                                  }
                                }
                              },
                              "destinationAccount": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "daa6ad75-a4c2-486f-a937-1bbf4d19553c"
                                  },
                                  "account_owner_name": {
                                    "type": "string",
                                    "example": "Max Gutix"
                                  },
                                  "bank_name": {
                                    "type": "string",
                                    "example": "Bank of Aerica"
                                  },
                                  "account_number": {
                                    "type": "string",
                                    "example": "48234817874"
                                  },
                                  "routing_number": {
                                    "type": "string",
                                    "example": "02123322"
                                  },
                                  "account_type": {
                                    "type": "string",
                                    "example": "us"
                                  },
                                  "business_identifier_code": {},
                                  "bank_country": {},
                                  "iban": {},
                                  "beneficiary_first_name": {},
                                  "beneficiary_last_name": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"fields provided are either missing or invalid\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "fields provided are either missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/transfer/fiat-to-crypto/all": {
      "get": {
        "summary": "Get all fiat-to-stablecoin transfer",
        "description": "Get all the transfer history of a user or your organization",
        "operationId": "get-all-stablecoin-to-fiat-liquidation-transfer-copy",
        "tags": ["Transfer"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Return records of this user if userId is provided",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "default to 10, maximum to 100",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "format: YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "format: YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"count\": 1,\n    \"records\": [\n        {\n            \"transferType\": \"FIAT_TO_CRYPTO\",\n            \"transferDetails\": {\n                \"id\": \"cf5001d4-fdfc-4a79-b476-b6b52f83d555\",\n                \"requestId\": \"cf5001d4-fdfc-4a79-b476-b6b52f83d555\",\n                \"sourceUserId\": \"9a493e48-872e-4692-9d3c-23b554bc7ea1\",\n                \"destinationUserId\": \"75d7c01f-5f93-4490-8b93-a62fd8020358\",\n                \"chain\": \"polygon\",\n                \"sourceCurrency\": \"usd\",\n                \"amount\": \"1\",\n                \"destinationCurrency\": \"usdc\",\n                \"sourceAccountId\": \"59c55090-151e-4662-b406-546ef049b5ec\",\n                \"createdAt\": \"2024-06-26T15:30:18.403535+00:00\",\n                \"updatedAt\": \"2024-07-03T02:25:00.951+00:00\",\n                \"status\": \"CONFIRMED\",\n              \"sourceUser\": {\n          \"business_name\": null,\n          \"legal_last_name\": \"YANG\",\n          \"compliance_email\": \"william@hifibridge.com\",\n          \"legal_first_name\": \"William\"\n        },\n        \"destinationUser\": {\n          \"business_name\": null,\n          \"legal_last_name\": \"YANG\",\n          \"compliance_email\": \"william@hifibridge.com\",\n          \"legal_first_name\": \"William\"\n        },\n        \"sourceAccount\": {\n          \"id\": \"0de2ae79-737d-4266-8c7d-ec82df476d3a\",\n          \"account_number\": \"7874\",\n          \"routing_number\": \"021000322\",\n          \"bank_name\": \"Bank of America\"\n        }\n            }\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 1,
                      "default": 0
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transferType": {
                            "type": "string",
                            "example": "FIAT_TO_CRYPTO"
                          },
                          "transferDetails": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "cf5001d4-fdfc-4a79-b476-b6b52f83d555"
                              },
                              "requestId": {
                                "type": "string",
                                "example": "cf5001d4-fdfc-4a79-b476-b6b52f83d555"
                              },
                              "sourceUserId": {
                                "type": "string",
                                "example": "9a493e48-872e-4692-9d3c-23b554bc7ea1"
                              },
                              "destinationUserId": {
                                "type": "string",
                                "example": "75d7c01f-5f93-4490-8b93-a62fd8020358"
                              },
                              "chain": {
                                "type": "string",
                                "example": "polygon"
                              },
                              "sourceCurrency": {
                                "type": "string",
                                "example": "usd"
                              },
                              "amount": {
                                "type": "string",
                                "example": "1"
                              },
                              "destinationCurrency": {
                                "type": "string",
                                "example": "usdc"
                              },
                              "sourceAccountId": {
                                "type": "string",
                                "example": "59c55090-151e-4662-b406-546ef049b5ec"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2024-06-26T15:30:18.403535+00:00"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2024-07-03T02:25:00.951+00:00"
                              },
                              "status": {
                                "type": "string",
                                "example": "CONFIRMED"
                              },
                              "sourceUser": {
                                "type": "object",
                                "properties": {
                                  "business_name": {},
                                  "legal_last_name": {
                                    "type": "string",
                                    "example": "YANG"
                                  },
                                  "compliance_email": {
                                    "type": "string",
                                    "example": "william@hifibridge.com"
                                  },
                                  "legal_first_name": {
                                    "type": "string",
                                    "example": "William"
                                  }
                                }
                              },
                              "destinationUser": {
                                "type": "object",
                                "properties": {
                                  "business_name": {},
                                  "legal_last_name": {
                                    "type": "string",
                                    "example": "YANG"
                                  },
                                  "compliance_email": {
                                    "type": "string",
                                    "example": "william@hifibridge.com"
                                  },
                                  "legal_first_name": {
                                    "type": "string",
                                    "example": "William"
                                  }
                                }
                              },
                              "sourceAccount": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "0de2ae79-737d-4266-8c7d-ec82df476d3a"
                                  },
                                  "account_number": {
                                    "type": "string",
                                    "example": "7874"
                                  },
                                  "routing_number": {
                                    "type": "string",
                                    "example": "021000322"
                                  },
                                  "bank_name": {
                                    "type": "string",
                                    "example": "Bank of America"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"fields provided are either missing or invalid\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "fields provided are either missing or invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"error\": \"Unexpected error happened\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/account/onRampRail/virtualAccount": {
      "get": {
        "summary": "Get Deposit Bank Account Information",
        "description": "Get the virtual account information for stable coin deposit. The response will also include the micro deposit information requested by institution.",
        "operationId": "activate-fiat-to-stablecoin-conversion-for-user-copy",
        "tags": ["Account"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["US_ACH_WIRE"]
            }
          },
          {
            "name": "destinationCurrency",
            "in": "query",
            "description": "`usdt` is allowed only on `ETHEREUM_MAINNET` at this moment",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["usdc", "usdt"]
            }
          },
          {
            "name": "destinationChain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "POLYGON_MAINNET",
                "ETHEREUM_MAINNET",
                "OPTIMISM_MAINNET",
                "BASE_MAINNET"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of micro deposit records return for the virtual account, default to 10 maximum  to 100",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "in": "query",
            "description": "Return the micro deposit records that created **before** this **eventId**",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "in": "query",
            "description": "Return the micro deposit records that created **after** this **eventId**",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"virtualAccountId\": \"21593434-eb2a-4e44-a4d7-fc5700acd8a2\",\n    \"userId\": \"75d7c01f-5f93-43434-8b93-a62fd8020358\",\n    \"paymentRail\": \"ach_push\",\n    \"sourceCurrency\": \"usd\",\n    \"destinationChain\": \"POLYGON_MAINNET\",\n    \"destinationCurrency\": \"usdc\",\n    \"destinationWalletAddress\": \"0xBe64088c19d2F06890343bbE03A6125D7A23dec5\",\n    \"railStatus\": \"activated\",\n    \"depositInstructions\": {\n        \"bankName\": \"Lead Bank\",\n        \"routingNumber\": \"101023444\",\n        \"accountNumber\": \"223401218467\",\n        \"bankAddress\": \"1801 Main St., Kansas City, MO 64108\"\n    },\n    \"microDeposits\": {\n        \"count\": 1,\n        \"data\": [\n            {\n                \"eventId\": \"8b2e2301-9e9b-40bd-12b7-a189ba73d517\",\n                \"currency\": \"usd\",\n                \"createdAt\": \"2024-05-15T12:38:55.841Z\",\n                \"amount\": \"-0.36\",\n                \"sourceBankAccountDetails\": {\n                    \"description\": \"ACCTVERIFY CHARLES SCHWAB 5023447 223513 [Mick Burger]\",\n                    \"bankName\": \"CHARLES SCHWAB\",\n                    \"routingNumber\": \"032341114\",\n                    \"traceNumber\": \"03123434516328\"\n                }\n            }\n        ]\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "virtualAccountId": {
                      "type": "string",
                      "example": "21593434-eb2a-4e44-a4d7-fc5700acd8a2"
                    },
                    "userId": {
                      "type": "string",
                      "example": "75d7c01f-5f93-43434-8b93-a62fd8020358"
                    },
                    "paymentRail": {
                      "type": "string",
                      "example": "ach_push"
                    },
                    "sourceCurrency": {
                      "type": "string",
                      "example": "usd"
                    },
                    "destinationChain": {
                      "type": "string",
                      "example": "POLYGON_MAINNET"
                    },
                    "destinationCurrency": {
                      "type": "string",
                      "example": "usdc"
                    },
                    "destinationWalletAddress": {
                      "type": "string",
                      "example": "0xBe64088c19d2F06890343bbE03A6125D7A23dec5"
                    },
                    "railStatus": {
                      "type": "string",
                      "example": "activated"
                    },
                    "depositInstructions": {
                      "type": "object",
                      "properties": {
                        "bankName": {
                          "type": "string",
                          "example": "Lead Bank"
                        },
                        "routingNumber": {
                          "type": "string",
                          "example": "101023444"
                        },
                        "accountNumber": {
                          "type": "string",
                          "example": "223401218467"
                        },
                        "bankAddress": {
                          "type": "string",
                          "example": "1801 Main St., Kansas City, MO 64108"
                        }
                      }
                    },
                    "microDeposits": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "eventId": {
                                "type": "string",
                                "example": "8b2e2301-9e9b-40bd-12b7-a189ba73d517"
                              },
                              "currency": {
                                "type": "string",
                                "example": "usd"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2024-05-15T12:38:55.841Z"
                              },
                              "amount": {
                                "type": "string",
                                "example": "-0.36"
                              },
                              "sourceBankAccountDetails": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "type": "string",
                                    "example": "ACCTVERIFY CHARLES SCHWAB 5023447 223513 [Mick Burger]"
                                  },
                                  "bankName": {
                                    "type": "string",
                                    "example": "CHARLES SCHWAB"
                                  },
                                  "routingNumber": {
                                    "type": "string",
                                    "example": "032341114"
                                  },
                                  "traceNumber": {
                                    "type": "string",
                                    "example": "03123434516328"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\t\t\t\"error\": \"Rail is not yet activated, please use POST account/activateOnRampRail to activate required rail first\"\n\t\t\t}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Rail is not yet activated, please use POST account/activateOnRampRail to activate required rail first"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\t\t\t\"message\": \"Unexpected error happened\"\n\t\t\t}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unexpected error happened"
                    }
                  }
                }
              }
            }
          },
          "501": {
            "description": "501",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"message\": \"Rail is not yet available\"}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Rail is not yet available"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "x-readme": {
    "headers": [],
    "explorer-enabled": true,
    "proxy-enabled": true
  },
  "x-readme-fauxas": true
}
